ENCODE_get_fields.py
optional arguments:
  --infile	File containing a list of ENCs as a column
  --outfile	TSV file with fields, first line is column headings
  --query	A custom query to get accessions.
  --key		The keypair identifier from the keyfile. Default is --key=default
  --keyfile	The keypair file. Default is --keyfile=~/keypairs.json
  --debug	Print debug messages. Default is False.
  --multifield	File of fieldnames with one per line
  --onefield	single field entered at command line

To get multiple fields use the multifield argument:

        ENCODE_get_fields.py --infile filename --multifield fieldnames

    where the infile is a list of object identifiers
    and the multifield is a list of fields desired

To get a single field use the onefield argument:

        ENCODE_get_fields.py --infile filename --onefield field

    where onefield is a string containing the field name

To use a custom query for your object list:

        ENCODE_get_fields.py --query www.my/custom/url

    this can be used with multifield or onefield


ENCODE_patchSet.py
  --infile	A minimum two column list with identifier and value to patch
  --key		The keypair identifier from the keyfile. Default is --key=default
  --keyfile     The keypair file. Default is --keyfile=~/keypairs.json
  --debug	Print debug messages. Default is False.
  --remove	Patch to remove the value specified in the input file from the given field. Default is False.
  --update	Let the script PATCH the data. Default is False
  --accession	Single accession to patch
  --field	Field for single accession
  --data	Data for single accession

Input file should be a TSV (tab separated value) file with headers

accession   header1  header2     header3 ...
ENCSR000AAA value1   list1,list2 value3  ...

The file generated by ENCODE_get_fields is useable by this script

Whatever data is used to identify the object (accession, uuid, alias)
goes in the accession column to be used for identification of object

Examples:

To PATCH data run with update comamnd:

        ENCODE_patchSet.py --update

To PATCH a single object, field, and data:

        ENCODE_patchSet.py --accession ENCSR000AAA --field assay_term_name --data ChIP-seq

For more details:

        ENCODE_patchSet.py --help




dataRelease.py [-h] [--infile INFILE] [--accession ACCESSION]
                      [--outfile OUTFILE] [--key KEY] [--keyfile KEYFILE]
                      [--update] [--query QUERY] [--force] [--debug]
                      [--logall]

optional arguments:
  -h, --help	show this help message and exit
  --infile	File containing accessions
  --accession	Accession number for experiment
  --outfile	Output file name
  --key		The keypair identifier from the keyfile.
  --keyfile	The keyfile
  --update	Run script and update the objects. Default is off
  --query	Custom query for accessions
  --force	Forces release of experiments that did not pass audit. Default is off
  --debug	Run script in debug mode. Default is off
  --logall	Adds status of 'released' objects to output file. Default is off

takes a file with a list of experiment accessions, a query, or a single
accession and checks all associated objects and sets them to their released
status